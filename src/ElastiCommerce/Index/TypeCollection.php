<?php
declare(strict_types=1);

namespace SmartDevs\ElastiCommerce\Index;

use SmartDevs\ElastiCommerce\Implementor\Index\{
    TypeCollectionImplementor, TypeImplementor
};
use SmartDevs\ElastiCommerce\Util\Data\DataCollection;

class TypeCollection extends DataCollection implements TypeCollectionImplementor
{
    public function __construct()
    {
        $this->setItemObjectClass(Type::class);
    }

    /**
     * add an type to the list
     *
     * @param TypeImplementor $type
     */
    public function addType(TypeImplementor $type)
    {
        $this->addItem($type);
    }

    /**
     * get Index Type Instance by name
     *
     * @param string $type
     * @return TypeImplementor
     */
    public function getType(string $type): TypeImplementor
    {
        return $this->getItemById($type);
    }

    /**
     * get new empty type instance
     *
     * @return TypeImplementor
     */
    public function getNewType(): TypeImplementor
    {
        return $this->getNewEmptyItem(); // TODO: Change the autogenerated stub
    }
}